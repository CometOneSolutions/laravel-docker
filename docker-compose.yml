version: '3.8'

services:
  site:
    build:
      context: .
      dockerfile: nginx.dockerfile
    ports:
      - 80:80
    volumes:
      - ./src:/var/www/html
    depends_on:
      - openvpn-client
      - mysql
      - php
    # network_mode: container:openvpn-client

  mysql:
    image: mariadb:10.5
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
    volumes:
      - ./mysql:/var/lib/mysql

  php:
    build:
      context: .
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - ./src:/var/www/html

  composer:
    build:
      context: .
      dockerfile: composer.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - ./src:/var/www/html
    user: laravel
    working_dir: /var/www/html

  npm:
    image: node:current-alpine
    volumes:
      - ./src:/var/www/html
    entrypoint: ["npm"]
    working_dir: /var/www/html

  artisan:
    build:
      context: .
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - mysql
    entrypoint: ["php", "/var/www/html/artisan"]

  cron:
    build:
      context: .
      dockerfile: cron.dockerfile
    container_name: cron
    volumes:
      - ./src:/var/www/html

  queue:
    stop_signal: SIGINT
    build:
      context: .
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - mysql
    entrypoint: ["php", "/var/www/html/artisan", "queue:work", "-v", "--tries=3", "--timeout=300"]

  openvpn-client:
    image: ghcr.io/wfg/openvpn-client
    container_name: openvpn-client
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    volumes:
      - ./openvpn-client:/data/vpn
    restart: unless-stopped
    networks:
      - default

  # vpn:
  #   container_name: vpn
  #   image: dperson/openvpn-client:latestte
  #   cap_add:
  #     - net_admin
  #   restart: unless-stopped
  #   volumes:
  #     - /dev/net/tun:/dev/net/tun
  #     - ./vpn-config:/vpn # You'll need to provide this
  #   security_opt:
  #     - label:disable

networks:
  default:
